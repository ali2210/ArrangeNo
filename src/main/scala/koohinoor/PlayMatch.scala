 package koohinoor;import java.util;import scala.util.Random;import java.util.Stack;class PlayMatch {  private var random : Array[Int] = null;  private var stack1 : Stack[Int] = null;  private var stack2 : Stack[Int] = null;  def initGame() = {    random = new Array[Int](10);    stack1 = new util.Stack[Int]();    stack2 = new util.Stack[Int]();    var i : Int = 0;    while (i != random.length-1){      random(i) = Random.nextInt(100);      i= i+1;    };    for (rand <- random) print(rand + ",");  };  def Push(ele : Int) = {    var no = stack1.push(ele);    var i : Int =0;    while(i < stack1.size()){      println("No:" + stack1.get(i));      i = i+1;    };  };  def Pop() ={    if(!stack1.empty() && !stack2.empty()) {     var no = stack2.pop();      var no2 = stack1.pop();      if(no > no2){        stack1.push(no);        stack1.push(no2);      }else{        stack1.push(no2);        stack1.push(no);      };      println("On Stack 2 :" + no);      var i: Int = 0;      while ( i < stack2.size()) {        println("Elements Pop" + stack2.get(i));        i = i + 1;      };    };  };  def Win() ={    if(!stack1.empty()){      var i : Int = 0;      var gameState: Boolean = false;      while(i < stack1.size() && !gameState){       if(stack1.get(i) < stack1.get(i+1)){         i = i +1;         gameState = false;       }else{         gameState = true;      };        if(!gameState){          println("YOU WIN");        }        else {          println("you lose");        }      }    }  };  def InOrder(ele : Int ) = {    if(!stack1.empty()){      var no = stack1.pop();      if( no < ele){        stack1.push(no);        stack1.push(ele);        println("On Stack 1 =" + no);        var i : Int =0;        while(i < stack1.size()){          println("No:" + stack1.get(i));          i = i+1;        };      }; else{        stack2.push(no);        stack1.push(ele);        println("On Stack 2 = " + no);        var i : Int =0;        while(i < stack2.size()){          println("No:" + stack2.get(i));          i = i+1;        };      };    };  };  def Play() = {    var input : Int = 0;    var flag : Boolean = false;    println("Can you arrange random no");    initGame();    while(!flag) {      println();      println("Press 1, Push the element into stack");      println("Press 2, Pop the element");      println("Press 3, InOrder");      println("Press any key, Quit");      input = readInt();      validMove(input, flag);    };  };  def validMove(ele : Int, flag : Boolean) = {    var flagPoint = flag;    ele match {      case 1 => {        println("Enter any no Range [0-9]");        var input = readInt();          Push(random(input));      }      case 2 => {        Pop();      }      case 3 =>{        println("Enter any no Range [0-9]");        var input = readInt();        InOrder(random(input));      }      case _ => {          Win();        System.exit(0);      }    }  }}